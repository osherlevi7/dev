#  Static code analysis tool for terraform
name: JOB | Checkov terraform code static code analysis. 
# on:
  # push:
  #   branches: ["main", "feature/**", "fix/**"]
# Call form another workflow with the service params that has been changed. 
on:
  workflow_call: 
    inputs:
      services:
        required: true
        type: string
defaults:
  run:
    shell: bash

    
jobs:
  Job-Details:
    runs-on: ubuntu-latest
    steps:
      - name: Job-Details
        run: |
          echo "====================================================================="
          echo "====================================================================="
          echo "Workflow name:     [${GITHUB_WORKFLOW}]"
          echo "Workspace:         [${GITHUB_WORKSPACE}]"
          echo "Event:             [${GITHUB_EVENT_NAME}]"
          echo "Branch:            [${GITHUB_REF}]"
          echo "Initiate by:       [${{ github.triggering_actor }}]" 
  
  checkov:
    needs: Job-Details
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 | Checkout the code
        uses: actions/checkout@v4
      
      - name: Step 2 | Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      
      - name: Step 3 | Checkov Code Analysis check
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/
          framework: terraform 
          soft_fail: true
          quiet: true # optional: display only failed checks
          # file: example/tfplan.json # optional: provide the path for resource to be scanned. This will override the directory if both are provided.
          # log_level: DEBUG
          # var_file: ./testdir/gocd.yaml # optional: variable files to load in addition to the default files. Currently only supported for source Terraform and Helm chart scans.
          # container_user: 1000 # optional: Define what UID and / or what GID to run the container under to prevent permission issues
          # use_enforcement_rules: true # optional - use enforcement rule configs from the platform
          # github_pat: ${{ secrets.GH_PAT }}  # To give checkov the possibility to download private GitHub modules you need to pass a valid GitHub PAT with the needed permissions.